name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
  pull_request:
    paths:
      - 'src/**'
  workflow_dispatch:

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

  build:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build com Maven
        run: mvn clean install

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Executar testes
        run: mvn test

  sonarcloud:
    name: Análise com SonarCloud
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache do SonarCloud
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Executar análise SonarCloud com Maven
        run: mvn verify sonar:sonar -Dsonar.projectKey=gabrielborel_INFNET_DR3_TP1 -Dsonar.organization=gabrielborel -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  package:
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Gerar JAR com Maven
        run: mvn package

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test, package]
    steps:
      - name: Mensagem de deploy
        run: echo "Deploy realizado com sucesso"
