name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
  pull_request:
    paths:
      - 'src/**'
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Executar testes?'
        required: true
        default: 'true'
        type: boolean
      run_lint:
        description: 'Executar lint?'
        required: true
        default: 'true'
        type: boolean

jobs:
  lint:
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.run_lint == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: mvn checkstyle:check

  test:
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.run_tests == 'true'
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: mvn test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: mvn clean install

  sonarcloud:
    name: An√°lise com SonarCloud
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - run: mvn verify sonar:sonar -Dsonar.projectKey=gabrielborel_INFNET_DR3_TP1 -Dsonar.organization=gabrielborel -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  package:
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: mvn package

  deploy:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - run: echo "Deploy realizado com sucesso"
