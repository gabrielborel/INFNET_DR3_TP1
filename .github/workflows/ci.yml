name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
  pull_request:
    paths:
      - 'src/**'
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Executar testes?'
        required: true
        type: boolean
      run_lint:
        description: 'Executar lint?'
        required: true
        type: boolean

permissions:
  contents: read
  issues: write

jobs:
  lint-and-test:
    uses: ./.github/workflows/lint-and-test.yml
    with:
      run_tests: ${{ inputs.run_tests }}
      run_lint: ${{ inputs.run_lint }}

  build:
    runs-on: self-hosted
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: mvn clean install

  sonarcloud:
    name: Análise com SonarCloud
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - run: mvn verify sonar:sonar -Dsonar.projectKey=gabrielborel_INFNET_DR3_TP1 -Dsonar.organization=gabrielborel -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  package:
    runs-on: self-hosted
    needs: sonarcloud
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: mvn package

  deploy:
    runs-on: self-hosted
    needs: package
    steps:
      - run: echo "Deploy realizado com sucesso"

  create-issue-on-fail:
    runs-on: ubuntu-latest
    needs: deploy
    if: failure()
    steps:
      - name: Criar issue automática em caso de falha no deploy
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Falha no deploy detectada',
              body: 'O job de deploy falhou. Favor verificar o pipeline para corrigir.'
            })
